.MODEL SMALL
.STACK 100H
.DATA 

 AR DB 32,16,8,4,2,1
 
ARR DB 10 DUP(0) 

MSG1 DW 'PRINT ARRAY : $' 
MSG2 DW 'DECIMAL EQUIVALENT OF THE BINARY INPUT : $'

TOTAL DB 0
COUNT DB 0
DECI DB 0

.CODE
MAIN PROC

MOV AX,@DATA
MOV DS,AX

MOV BX,OFFSET ARR
MOV CX,6
MOV DX,0
MOV SI,0

GHURAO:
CALL DEC_INP
MOV DL,TOTAL
MOV [BX+SI],DL
INC SI  
CALL NEW_LINE
LOOP GHURAO 
CALL NEW_LINE


MOV BX,OFFSET ARR
MOV CX,6 
MOV SI,0
MOV DX,0

MOV AH,09H
LEA DX,MSG1
INT 21H
CALL NEW_LINE


DEKHAO:
MOV DL,[BX+SI]
MOV TOTAL,DL
CALL DEC_OUT

INC SI 
CALL NEW_LINE
LOOP DEKHAO
CALL NEW_LINE
   


MOV AX,0
MOV BX,0
MOV DX,0
MOV CX,6 
MOV SI,0

CALCU:
 
 MOV AL,[ARR+SI]
 TEST AL,1 
 

 JNZ ONE_ASE
  
 FEROT:
 
 INC SI 
 
LOOP CALCU
JMP BERHOU 
 
 

ONE_ASE:
MOV BL,[AR+SI]
ADD DECI,BL
JMP FEROT

BERHOU:  


MOV AH,09H
LEA DX,MSG2
INT 21H
CALL NEW_LINE


MOV DX,0
MOV DL,DECI
MOV TOTAL,DL
CALL DEC_OUT
CALL NEW_LINE   

  JMP TERMINATE

MAIN ENDP


NEW_LINE PROC
    PUSH DX
    PUSH AX
    MOV AH,02H
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H
    POP AX
    POP DX
    RET
    NEW_LINE ENDP 


DEC_OUT PROC
    
    PUSH BX
    PUSH CX
    PUSH DX 
    MOV COUNT,0
    MOV DX,0
    MOV AL,TOTAL
    
    REPEAT:
    
    MOV BX,0 
    MOV AH,0
    MOV BL,10
    DIV BL 
    MOV DL,AH
    PUSH DX 
    INC COUNT
    CMP AL,0
    
    JNE REPEAT
    
    MOV DX,0
    MOV CX,0
    MOV CL,COUNT
    
    L:
    POP DX
    ADD DL,'0'
    MOV AH,02H
    INT 21H
    LOOP L
    
    POP DX
    POP CX
    POP BX
    RET
    DEC_OUT ENDP


DEC_INP PROC
    
    PUSH BX
    
    MOV TOTAL,0
    MOV AX,0
    MOV AH,01H
    INT 21H 
    
    AGAIN:
    CMP AL,0DH
    JE EXIT
    SUB AL,'0'
    MOV BL,AL
    MOV AL,10
    MUL TOTAL
    ADD AL,BL
    MOV TOTAL,AL
    MOV AH,01H
    INT 21H
    JMP AGAIN 
    EXIT:
    POP BX
    RET
    DEC_INP ENDP   

TERMINATE:
END MAIN